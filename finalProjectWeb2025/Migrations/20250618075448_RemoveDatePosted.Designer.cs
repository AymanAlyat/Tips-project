// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using finalProjectWeb2025.Models;

#nullable disable

namespace finalProjectWeb2025.Migrations
{
    [DbContext(typeof(WebTipsContext))]
    [Migration("20250618075448_RemoveDatePosted")]
    partial class RemoveDatePosted
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("finalProjectWeb2025.Models.Tips", b =>
                {
                    b.Property<int>("TipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipId"), 1L, 1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TipId");

                    b.HasIndex("UserId");

                    b.ToTable("tips");

                    b.HasData(
                        new
                        {
                            TipId = 1,
                            Category = "HTML",
                            Content = "Use semantic tags.",
                            Title = "HTML Basics",
                            UserId = 1
                        },
                        new
                        {
                            TipId = 2,
                            Category = "CSS",
                            Content = "Use flexbox for layouts.",
                            Title = "CSS Flexbox",
                            UserId = 2
                        },
                        new
                        {
                            TipId = 3,
                            Category = "JavaScript",
                            Content = "Use addEventListener.",
                            Title = "JavaScript Events",
                            UserId = 3
                        },
                        new
                        {
                            TipId = 4,
                            Category = "CSS",
                            Content = "Use media queries.",
                            Title = "Responsive Design",
                            UserId = 4
                        },
                        new
                        {
                            TipId = 5,
                            Category = "HTML",
                            Content = "Always use labels.",
                            Title = "HTML Forms",
                            UserId = 5
                        });
                });

            modelBuilder.Entity("finalProjectWeb2025.Models.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "ali@example.com",
                            Name = "Ali Talal",
                            Password = "123"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "dalia@example.com",
                            Name = "Dalia Ahmed",
                            Password = "456"
                        },
                        new
                        {
                            UserId = 3,
                            Email = "mohammad@example.com",
                            Name = "Mohammad Bader",
                            Password = "789"
                        },
                        new
                        {
                            UserId = 4,
                            Email = "sami@example.com",
                            Name = "Sami Adel",
                            Password = "abc"
                        },
                        new
                        {
                            UserId = 5,
                            Email = "faris@example.com",
                            Name = "Faris Esaam",
                            Password = "xyz"
                        });
                });

            modelBuilder.Entity("finalProjectWeb2025.Models.Tips", b =>
                {
                    b.HasOne("finalProjectWeb2025.Models.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
